{"version":3,"sources":["img/logo.svg","components/Home.js","components/About.js","components/Work.js","components/App.js","components/serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Home","react_default","a","createElement","className","src","logo","alt","href","target","rel","About","class","React","Component","Work","Header","react_router_dom","to","App","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,sPCyBzBC,MAtBf,WACE,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,6BAChBH,EAAAC,EAAAC,cAAA,OAAKE,IAAKC,IAAMF,UAAU,WAAWG,IAAI,SACzCN,EAAAC,EAAAC,cAAA,iBACOF,EAAAC,EAAAC,cAAA,0BADP,wBAIAF,EAAAC,EAAAC,cAAA,KACEC,UAAU,YACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,uBAJN,0DCVaC,mLAEjB,OACEV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKS,MAAM,8CACTX,EAAAC,EAAAC,cAAA,OAAKS,MAAM,SAASP,IAAI,oBAAoBE,IAAI,4BAChDN,EAAAC,EAAAC,cAAA,OAAKS,MAAM,aACTX,EAAAC,EAAAC,cAAA,OAAKS,MAAM,0BAAX,sBACAX,EAAAC,EAAAC,cAAA,KAAGS,MAAM,2BAAT,wJAIFX,EAAAC,EAAAC,cAAA,OAAKS,MAAM,aACTX,EAAAC,EAAAC,cAAA,QAAMS,MAAM,4FAAZ,gBACAX,EAAAC,EAAAC,cAAA,QAAMS,MAAM,4FAAZ,WACAX,EAAAC,EAAAC,cAAA,QAAMS,MAAM,uFAAZ,qBAfuBC,IAAMC,WCQ1BC,MARf,WACE,OACEd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,kCCcN,SAASa,IACP,OACEf,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,MAAIS,MAAM,QACRX,EAAAC,EAAAC,cAAA,MAAIS,MAAM,QACRX,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAML,MAAM,sBAAsBM,GAAG,KAArC,SAEFjB,EAAAC,EAAAC,cAAA,MAAIS,MAAM,QACRX,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAML,MAAM,sBAAsBM,GAAG,UAArC,UAEFjB,EAAAC,EAAAC,cAAA,MAAIS,MAAM,QACRX,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAML,MAAM,sBAAsBM,GAAG,SAArC,WAOKC,MA7Bf,WACE,OACElB,EAAAC,EAAAC,cAACc,EAAA,EAAD,KACEhB,EAAAC,EAAAC,cAACa,EAAD,MACAf,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWvB,IACjCC,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAOE,KAAK,SAASC,UAAWZ,IAChCV,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAOE,KAAK,QAAQC,UAAWR,MCFjBS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTNC,IAASC,OAAO7B,EAAAC,EAAAC,cAAC4B,EAAD,MAASC,SAASC,eAAe,WDwH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.0d0e65dd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport logo from '../img/logo.svg';\n\nfunction Home() {\n  return (\n    <div className=\"text-center\">\n      <header className=\"m-6 p-6 rounded shadow-lg\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n\n        <a\n          className=\"text-base\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\n\nexport default class About extends React.Component {\n  render() {\n    return (\n      <div className=\"text-center\">\n        <div class=\"max-w-sm rounded overflow-hidden shadow-lg\">\n          <img class=\"w-full\" src=\"/img/card-top.jpg\" alt=\"Sunset in the mountains\"/>\n          <div class=\"px-6 py-4\">\n            <div class=\"font-bold text-xl mb-2\">The Coldest Sunset</div>\n            <p class=\"text-gray-700 text-base\">\n              Lorem ipsum dolor sit amet, consectetur adipisicing elit. Voluptatibus quia, nulla! Maiores et perferendis eaque, exercitationem praesentium nihil.\n            </p>\n          </div>\n          <div class=\"px-6 py-4\">\n            <span class=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2\">#photography</span>\n            <span class=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2\">#travel</span>\n            <span class=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700\">#winter</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nfunction Work() {\n  return (\n    <div className=\"text-center\">\n      <h1>Work</h1>\n    </div>\n  );\n}\n\nexport default Work;\n","import React from 'react';\nimport '../css/App.css';\nimport Home from \"./Home\";\nimport About from \"./About\";\nimport Work from \"./Work\";\n\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/work\" component={Work} />\n    </Router>\n  );\n}\n\nfunction Header() {\n  return (\n    <header>\n      <ul class=\"flex\">\n        <li class=\"mr-6\">\n          <Link class=\"hover:text-grey-800\" to=\"/\">Home</Link>\n        </li>\n        <li class=\"mr-6\">\n          <Link class=\"hover:text-grey-800\" to=\"/about\">About</Link>\n        </li>\n        <li class=\"mr-6\">\n          <Link class=\"hover:text-grey-800\" to=\"/work\">Work</Link>\n        </li>\n      </ul>\n    </header>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './css/index.css';\nimport './css/tailwind.css';\nimport App from './components/App';\n\nimport * as serviceWorker from './components/serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('lildot'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}